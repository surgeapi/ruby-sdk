module Surge
  module Models
    type message_delivered_webhook_event =
      {
        account_id: String,
        data: Surge::MessageDeliveredWebhookEvent::Data,
        timestamp: Time,
        type: Surge::Models::MessageDeliveredWebhookEvent::type_
      }

    class MessageDeliveredWebhookEvent < Surge::Internal::Type::BaseModel
      attr_accessor account_id: String

      attr_accessor data: Surge::MessageDeliveredWebhookEvent::Data

      attr_accessor timestamp: Time

      attr_accessor type: Surge::Models::MessageDeliveredWebhookEvent::type_

      def initialize: (
        account_id: String,
        data: Surge::MessageDeliveredWebhookEvent::Data,
        timestamp: Time,
        type: Surge::Models::MessageDeliveredWebhookEvent::type_
      ) -> void

      def to_hash: -> {
        account_id: String,
        data: Surge::MessageDeliveredWebhookEvent::Data,
        timestamp: Time,
        type: Surge::Models::MessageDeliveredWebhookEvent::type_
      }

      type data =
        {
          id: String,
          body: String,
          conversation: Surge::MessageDeliveredWebhookEvent::Data::Conversation,
          delivered_at: Time,
          attachments: ::Array[Surge::MessageDeliveredWebhookEvent::Data::Attachment]
        }

      class Data < Surge::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor body: String

        attr_accessor conversation: Surge::MessageDeliveredWebhookEvent::Data::Conversation

        attr_accessor delivered_at: Time

        attr_reader attachments: ::Array[Surge::MessageDeliveredWebhookEvent::Data::Attachment]?

        def attachments=: (
          ::Array[Surge::MessageDeliveredWebhookEvent::Data::Attachment]
        ) -> ::Array[Surge::MessageDeliveredWebhookEvent::Data::Attachment]

        def initialize: (
          id: String,
          body: String,
          conversation: Surge::MessageDeliveredWebhookEvent::Data::Conversation,
          delivered_at: Time,
          ?attachments: ::Array[Surge::MessageDeliveredWebhookEvent::Data::Attachment]
        ) -> void

        def to_hash: -> {
          id: String,
          body: String,
          conversation: Surge::MessageDeliveredWebhookEvent::Data::Conversation,
          delivered_at: Time,
          attachments: ::Array[Surge::MessageDeliveredWebhookEvent::Data::Attachment]
        }

        type conversation =
          {
            id: String,
            contact: Surge::Contact,
            phone_number: Surge::PhoneNumber
          }

        class Conversation < Surge::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor contact: Surge::Contact

          attr_accessor phone_number: Surge::PhoneNumber

          def initialize: (
            id: String,
            contact: Surge::Contact,
            phone_number: Surge::PhoneNumber
          ) -> void

          def to_hash: -> {
            id: String,
            contact: Surge::Contact,
            phone_number: Surge::PhoneNumber
          }
        end

        type attachment =
          {
            id: String,
            type: Surge::Models::MessageDeliveredWebhookEvent::Data::Attachment::type_,
            url: String
          }

        class Attachment < Surge::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor type: Surge::Models::MessageDeliveredWebhookEvent::Data::Attachment::type_

          attr_accessor url: String

          def initialize: (
            id: String,
            type: Surge::Models::MessageDeliveredWebhookEvent::Data::Attachment::type_,
            url: String
          ) -> void

          def to_hash: -> {
            id: String,
            type: Surge::Models::MessageDeliveredWebhookEvent::Data::Attachment::type_,
            url: String
          }

          type type_ = :file | :image | :link | :video

          module Type
            extend Surge::Internal::Type::Enum

            FILE: :file
            IMAGE: :image
            LINK: :link
            VIDEO: :video

            def self?.values: -> ::Array[Surge::Models::MessageDeliveredWebhookEvent::Data::Attachment::type_]
          end
        end
      end

      type type_ = :"message.delivered"

      module Type
        extend Surge::Internal::Type::Enum

        MESSAGE_DELIVERED: :"message.delivered"

        def self?.values: -> ::Array[Surge::Models::MessageDeliveredWebhookEvent::type_]
      end
    end
  end
end
