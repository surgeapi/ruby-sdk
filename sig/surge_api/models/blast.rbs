module SurgeAPI
  module Models
    type blast =
      {
        id: String,
        attachments: ::Array[SurgeAPI::Blast::Attachment],
        body: String,
        name: String,
        send_at: Time
      }

    class Blast < SurgeAPI::Internal::Type::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader attachments: ::Array[SurgeAPI::Blast::Attachment]?

      def attachments=: (
        ::Array[SurgeAPI::Blast::Attachment]
      ) -> ::Array[SurgeAPI::Blast::Attachment]

      attr_reader body: String?

      def body=: (String) -> String

      attr_reader name: String?

      def name=: (String) -> String

      attr_reader send_at: Time?

      def send_at=: (Time) -> Time

      def initialize: (
        ?id: String,
        ?attachments: ::Array[SurgeAPI::Blast::Attachment],
        ?body: String,
        ?name: String,
        ?send_at: Time
      ) -> void

      def to_hash: -> {
        id: String,
        attachments: ::Array[SurgeAPI::Blast::Attachment],
        body: String,
        name: String,
        send_at: Time
      }

      type attachment = { url: String }

      class Attachment < SurgeAPI::Internal::Type::BaseModel
        attr_reader url: String?

        def url=: (String) -> String

        def initialize: (?url: String) -> void

        def to_hash: -> { url: String }
      end
    end
  end
end
