module SurgeAPI
  module Models
    type verification =
      {
        id: String,
        attempt_count: Integer,
        phone_number: String,
        status: SurgeAPI::Models::Verification::status
      }

    class Verification < SurgeAPI::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor attempt_count: Integer

      attr_accessor phone_number: String

      attr_accessor status: SurgeAPI::Models::Verification::status

      def initialize: (
        id: String,
        attempt_count: Integer,
        phone_number: String,
        status: SurgeAPI::Models::Verification::status
      ) -> void

      def to_hash: -> {
        id: String,
        attempt_count: Integer,
        phone_number: String,
        status: SurgeAPI::Models::Verification::status
      }

      type status = :pending | :verified | :exhausted | :expired

      module Status
        extend SurgeAPI::Internal::Type::Enum

        PENDING: :pending
        VERIFIED: :verified
        EXHAUSTED: :exhausted
        EXPIRED: :expired

        def self?.values: -> ::Array[SurgeAPI::Models::Verification::status]
      end
    end
  end
end
