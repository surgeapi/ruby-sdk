module SurgeAPI
  module Models
    type campaign_params =
      SurgeAPI::CampaignParams::StandardCampaignParams
      | SurgeAPI::CampaignParams::ExternalCampaignParams

    module CampaignParams
      extend SurgeAPI::Internal::Type::Union

      type standard_campaign_params =
        {
          consent_flow: String,
          description: String,
          message_samples: ::Array[String],
          privacy_policy_url: String,
          use_cases: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::use_case],
          volume: SurgeAPI::Models::CampaignParams::StandardCampaignParams::volume,
          includes: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_],
          link_sample: String,
          terms_and_conditions_url: String
        }

      class StandardCampaignParams < SurgeAPI::Internal::Type::BaseModel
        attr_accessor consent_flow: String

        attr_accessor description: String

        attr_accessor message_samples: ::Array[String]

        attr_accessor privacy_policy_url: String

        attr_accessor use_cases: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::use_case]

        attr_accessor volume: SurgeAPI::Models::CampaignParams::StandardCampaignParams::volume

        attr_reader includes: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_]?

        def includes=: (
          ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_]
        ) -> ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_]

        attr_reader link_sample: String?

        def link_sample=: (String) -> String

        attr_reader terms_and_conditions_url: String?

        def terms_and_conditions_url=: (String) -> String

        def initialize: (
          consent_flow: String,
          description: String,
          message_samples: ::Array[String],
          privacy_policy_url: String,
          use_cases: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::use_case],
          volume: SurgeAPI::Models::CampaignParams::StandardCampaignParams::volume,
          ?includes: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_],
          ?link_sample: String,
          ?terms_and_conditions_url: String
        ) -> void

        def to_hash: -> {
          consent_flow: String,
          description: String,
          message_samples: ::Array[String],
          privacy_policy_url: String,
          use_cases: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::use_case],
          volume: SurgeAPI::Models::CampaignParams::StandardCampaignParams::volume,
          includes: ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_],
          link_sample: String,
          terms_and_conditions_url: String
        }

        type use_case =
          :account_notification
          | :customer_care
          | :delivery_notification
          | :fraud_alert
          | :higher_education
          | :marketing
          | :polling_voting
          | :public_service_announcement
          | :security_alert
          | :two_factor_authentication

        module UseCase
          extend SurgeAPI::Internal::Type::Enum

          ACCOUNT_NOTIFICATION: :account_notification
          CUSTOMER_CARE: :customer_care
          DELIVERY_NOTIFICATION: :delivery_notification
          FRAUD_ALERT: :fraud_alert
          HIGHER_EDUCATION: :higher_education
          MARKETING: :marketing
          POLLING_VOTING: :polling_voting
          PUBLIC_SERVICE_ANNOUNCEMENT: :public_service_announcement
          SECURITY_ALERT: :security_alert
          TWO_FACTOR_AUTHENTICATION: :two_factor_authentication

          def self?.values: -> ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::use_case]
        end

        type volume = :high | :low

        module Volume
          extend SurgeAPI::Internal::Type::Enum

          HIGH: :high
          LOW: :low

          def self?.values: -> ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::volume]
        end

        type include_ = :links | :phone_numbers | :age_gated | :direct_lending

        module Include
          extend SurgeAPI::Internal::Type::Enum

          LINKS: :links
          PHONE_NUMBERS: :phone_numbers
          AGE_GATED: :age_gated
          DIRECT_LENDING: :direct_lending

          def self?.values: -> ::Array[SurgeAPI::Models::CampaignParams::StandardCampaignParams::include_]
        end
      end

      type external_campaign_params = { tcr_id: String }

      class ExternalCampaignParams < SurgeAPI::Internal::Type::BaseModel
        attr_accessor tcr_id: String

        def initialize: (tcr_id: String) -> void

        def to_hash: -> { tcr_id: String }
      end

      def self?.variants: -> ::Array[SurgeAPI::Models::campaign_params]
    end
  end
end
