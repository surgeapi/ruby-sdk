module SurgeAPI
  module Models
    type call_ended_webhook_event =
      {
        account_id: String,
        data: SurgeAPI::CallEndedWebhookEvent::Data,
        timestamp: Time,
        type: :"call.ended"
      }

    class CallEndedWebhookEvent < SurgeAPI::Internal::Type::BaseModel
      attr_accessor account_id: String

      attr_accessor data: SurgeAPI::CallEndedWebhookEvent::Data

      attr_accessor timestamp: Time

      attr_accessor type: :"call.ended"

      def initialize: (
        account_id: String,
        data: SurgeAPI::CallEndedWebhookEvent::Data,
        timestamp: Time,
        ?type: :"call.ended"
      ) -> void

      def to_hash: -> {
        account_id: String,
        data: SurgeAPI::CallEndedWebhookEvent::Data,
        timestamp: Time,
        type: :"call.ended"
      }

      type data =
        {
          id: String,
          contact: SurgeAPI::Contact,
          duration: Integer,
          initiated_at: Time,
          status: SurgeAPI::Models::CallEndedWebhookEvent::Data::status
        }

      class Data < SurgeAPI::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor contact: SurgeAPI::Contact

        attr_accessor duration: Integer

        attr_accessor initiated_at: Time

        attr_accessor status: SurgeAPI::Models::CallEndedWebhookEvent::Data::status

        def initialize: (
          id: String,
          contact: SurgeAPI::Contact,
          duration: Integer,
          initiated_at: Time,
          status: SurgeAPI::Models::CallEndedWebhookEvent::Data::status
        ) -> void

        def to_hash: -> {
          id: String,
          contact: SurgeAPI::Contact,
          duration: Integer,
          initiated_at: Time,
          status: SurgeAPI::Models::CallEndedWebhookEvent::Data::status
        }

        type status =
          :busy
          | :canceled
          | :completed
          | :failed
          | :in_progress
          | :missed
          | :no_answer
          | :queued
          | :ringing

        module Status
          extend SurgeAPI::Internal::Type::Enum

          BUSY: :busy
          CANCELED: :canceled
          COMPLETED: :completed
          FAILED: :failed
          IN_PROGRESS: :in_progress
          MISSED: :missed
          NO_ANSWER: :no_answer
          QUEUED: :queued
          RINGING: :ringing

          def self?.values: -> ::Array[SurgeAPI::Models::CallEndedWebhookEvent::Data::status]
        end
      end
    end
  end
end
